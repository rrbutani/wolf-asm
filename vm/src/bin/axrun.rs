//! axrun - the ax virtual machine
//!
//! Runs machine code generated from the ax assembly language

#![deny(unused_must_use)]

use std::path::PathBuf;
use std::fs::File;

use anyhow::Context;
use structopt::StructOpt;
use asm::executable::Executable;

#[derive(Debug, StructOpt)]
#[structopt(name = "axrun", about)]
struct VMOptions {
    /// The executable file generated by the ax assembler
    #[structopt(name = "input", parse(from_os_str))]
    executable_path: PathBuf,
}

fn main() -> anyhow::Result<()> {
    let VMOptions {executable_path} = VMOptions::from_args();

    let executable_file = File::open(&executable_path)
        .with_context(|| format!("Failed to read executable: `{}`", executable_path.display()))?;
    let exec: Executable = bincode::deserialize_from(executable_file)
        .with_context(|| format!("Failed to deserialize executable: `{}`", executable_path.display()))?;

    dbg!(exec);

    Ok(())
}
